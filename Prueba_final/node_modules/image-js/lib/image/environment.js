'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.writeFile = exports.createWriteStream = exports.DOMImage = exports.ImageData = exports.Canvas = exports.env = undefined;
exports.fetchBinary = fetchBinary;

var _fs = require('fs');

var Canvas = void 0,
    DOMImage = void 0,
    ImageData = void 0;
try {
    var canvas = require('canvas');
    exports.Canvas = Canvas = canvas;
    exports.DOMImage = DOMImage = canvas.Image;
    exports.ImageData = ImageData = canvas.ImageData;
} catch (e) {
    // eslint-disable-next-line no-console
    console.error('image-js could not load the canvas library. Some methods may not work.');
    exports.Canvas = Canvas = function Canvas() {
        throw new Error('Canvas requires the canvas library');
    };
    exports.DOMImage = DOMImage = function DOMImage() {
        throw new Error('DOMImage requires the canvas library');
    };
    exports.ImageData = ImageData = function ImageData() {
        throw new Error('ImageData requires the canvas library');
    };
}

var env = 'node';

function fetchBinary(path) {
    return new Promise(function (resolve, reject) {
        (0, _fs.readFile)(path, function (err, data) {
            if (err) reject(err);else resolve(data.buffer);
        });
    });
}

exports.env = env;
exports.Canvas = Canvas;
exports.ImageData = ImageData;
exports.DOMImage = DOMImage;
exports.createWriteStream = _fs.createWriteStream;
exports.writeFile = _fs.writeFile;
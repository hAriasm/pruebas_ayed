"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = commonBorderLength;

// We calculate all the border length with the neighbours

function commonBorderLength(roiMap) {
    var data = roiMap.data;
    var dx = [+1, 0, -1, 0];
    var dy = [0, +1, 0, -1];

    var minMax = roiMap.minMax;
    var shift = -minMax.min;
    var max = minMax.max + shift;
    var borderInfo = [];
    for (var i = 0; i <= max; i++) {
        borderInfo.push(Object.create(null));
    }

    for (var x = 0; x < roiMap.width; x++) {
        for (var y = 0; y < roiMap.height; y++) {
            var target = x + y * roiMap.width;
            var currentRoiID = data[target];
            if (currentRoiID !== 0) {
                // each pixel may only contribute one time to a border
                var used = Object.create(null);
                var isBorder = false;
                for (var dir = 0; dir < 4; dir++) {
                    var newX = x + dx[dir];
                    var newY = y + dy[dir];
                    if (newX >= 0 && newY >= 0 && newX < roiMap.width && newY < roiMap.height) {
                        var neighbourRoiID = data[newX + newY * roiMap.width];
                        if (currentRoiID !== neighbourRoiID) {
                            isBorder = true;
                            if (neighbourRoiID !== 0 && used[neighbourRoiID] === undefined) {
                                used[neighbourRoiID] = true;
                                if (!borderInfo[neighbourRoiID + shift][currentRoiID]) {
                                    borderInfo[neighbourRoiID + shift][currentRoiID] = 1;
                                } else {
                                    borderInfo[neighbourRoiID + shift][currentRoiID]++;
                                }
                            }
                        }
                    } else {
                        isBorder = true;
                    }
                }
                // we will also add an information to specify the border length
                if (isBorder) {
                    if (!borderInfo[currentRoiID + shift][currentRoiID]) {
                        borderInfo[currentRoiID + shift][currentRoiID] = 1;
                    } else {
                        borderInfo[currentRoiID + shift][currentRoiID]++;
                    }
                }
            }
        }
    }

    // we convert now the result to an object for fast lookup and we will reshift the result
    var result = {};
    for (var _i = 0; _i < borderInfo.length; _i++) {
        if (Object.keys(borderInfo[_i]).length > 0) {
            result[_i - shift] = borderInfo[_i];
        }
    }
    return result;
}